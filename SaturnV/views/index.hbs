
<head>
  <meta charset="utf-8">

    <style>

    * {
      background-color: black
    }
      body {
        font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
        width: 100vw;
        height: 100vh;
        position: fixed;
        margin:0;
        padding:0;
        border:0;
      }

      #sun {
        stroke: white;
        fill: lightblue;
      }

      .orbit {
        stroke: white;
        fill: transparent;
      }

      .planet {
        stroke: #666;
        fill: #fff;

      }
      .text_class {
        fill:white
      }

    </style>
  </head>
  <body>
  <div style="width:100%; text-align: right; margin-top: 15px">
      <a href="/logout" style='text-decoration:none; color:white; margin-bottom: 15px; margin-right: 15px'>Log Out</a>
    </div>
    <script src="http://d3js.org/d3.v3.min.js"></script>
    <script>

      // establish variables
      var w     = 1440;
      var h     = 900;
      var x     = (w/2) - 250;
      var y     = (h/2) - 150;
      var t0    = new Date().setHours(0,0,0,0);
      var delta = (Date.now() - t0);

      // planets and moons
      var planets = {{{planets}}}

      // insert svg element
      var svg = d3.select('body').insert("svg")
          .attr("width", w)
          .attr("height", h);

      // sun
      svg.append("circle")
         .attr("r", 20)
         .attr("cx", x)
         .attr("cy", y)
         .attr("id", "sun");

      // planet group
      var container = svg.append("g")
          .attr("id", "orbit_container")
          .attr("transform", "translate(" + x + "," + y + ")");
      // draw planets and moon clusters
      var allPlanets = container.selectAll("g.planet").data(planets).enter().append("g")
               .attr("class", "planet_cluster").each(function(d, i) {
                 console.log(this);
                 d3.select(this).append("circle").attr("class", "orbit")
                   .attr("r", d.R);
                 d3.select(this).append("text").text(planets[i].name).attr("x",planets[i].R+20)
                     .attr("y",0).attr("class", "text_class");
                 d3.select(this).append("circle").attr("r", d.r).attr("cx",d.R)
                   .attr("cy", 0).attr("class", "planet");
                 d3.select(this).append("g").attr("transform", "translate(" + d.R + ",0)")
                    .selectAll("g.moon").data(d.moons).enter().append("g")
                    .attr("class", "moon_cluster").each(function(d, i) {
                      d3.select(this).append("circle").attr("class", "orbit")
                        .attr("r", d.R);
                      d3.select(this).append("circle").attr("r", d.r).attr("cx",d.R)
                        .attr("cy", 0).attr("class", "moon");
                    })
                    .attr("transform", function(d) {
                      return "rotate(" + (d.phi0 + (delta * (d.speed/100))) + ")";
                    });
               })
               .attr("transform", function(d) {
                 return "rotate(" + (d.phi0 + (delta * (d.speed/100))) + ")";
               })
        // allPlanets.append("text").attr("cx", )
      // throttled rotaiton animations
      setInterval(function(){
        var delta = (Date.now() - t0);
        svg.selectAll(".planet_cluster, .moon_cluster").attr("transform", function(d) {
          return "rotate(" + (d.phi0 + (delta * (d.speed/100))) + ")";
        });
      }, 40);

    </script>
  </body>



  <!-- <head>
  <meta charset="utf-8">

    <style>

      body {
        background-color: white;
        font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
        width: 500px;
        height: 300px;
        position: relative;

      }
​
      #sun {
        stroke: white;
        fill: #1e434d;
      }
​
      .orbit {
        stroke: black;
        fill: transparent;
      }
​
      .planet {
        stroke: #666;
        fill: #fff;

      }
      .moon {
        fill: red;

      }

      #lol {
        color: white
      }
​
    </style>
  </head>
  <body>

    <script src="http://d3js.org/d3.v3.min.js"></script>
    <script>
​
      // establish variables
      var w     = 960;
      var h     = 500;
      var x     = (w/2) - 250;
      var y     = (h/2) - 150;
      var t0    = new Date().setHours(0,0,0,0);
      var delta = (Date.now() - t0);
​
      // planets and moons
      var planets = [
        { R:    23, r:   1, speed: -2, phi0:  35, moons: [
           { R:  20, r:   1, speed: -2, phi0:  25 }
        ]},
        { R:    45, r:   2, speed: -10.00, phi0: 135, moons: [   // venus
        ]},
        { R:    87, r:   2, speed: -10.00, phi0: 135, moons: [   // earth
                  // the moon
        ]},
        { R:   140, r:   1, speed: -0.80, phi0: 235, moons: [   // mars
          { R:   6, r: 0.5, speed: -3.80, phi0:  15 },          // phobos
          { R:   9, r: 0.5, speed: -2.80, phi0: 115 }           // deimos
        ]},
        { R:   290, r:  22, speed: -0.43, phi0: 135, moons: [   // jupiter
          { R:  30, r:   2, speed: -7.70, phi0:  25 },          // io
                   // callisto
        ]},
        { R:   583, r:  18, "speed": -0.32, phi0: 260, moons: [   // saturn
          { R:  28, r:   1, speed: -4.10, phi0: 120 },          // mimas
          { R:  33, r:   1, speed: -3.90, phi0:  20 },          // enceladus
          { R:  38, r:   1, speed: -3.60, phi0:   0 },          // tethys
          { R:  44, r:   1, speed: -3.20, phi0: 100 },          // dione
          { R:  58, r:   2, speed: -2.90, phi0: 300 },          // rhea
          { R:  98, r:   5, speed: -1.30, phi0: 180 },          // titan
          { R: 188, r:   1, speed: -0.10, phi0:  10 }           // lapetus
        ]}
      ];
​
      // insert svg element
      var svg = d3.select('body').insert("svg")
          .attr("width", w)
          .attr("height", h);
​
      // sun
      svg.append("circle")
         .attr("r", 10)
         .attr("cx", x)
         .attr("cy", y)
         .attr("id", "sun");

​
​
      // planet group
      var container = svg.append("g")
          .attr("id", "orbit_container")
          .attr("transform", "translate(" + x + "," + y + ")")

​
      // draw planets and moon clusters
      container.selectAll("g.planet").data(planets).enter().append("g")
               .attr("class", "planet_cluster").each(function(d, i) {

                 d3.select(this).append("circle").attr("class", "orbit")
                   .attr("r", d.R);
                 d3.select(this).append("circle").attr("r", d.r).attr("cx",d.R)
                   .attr("cy", 0).attr("class", "planet");
                 d3.select(this).append("g").attr("transform", "translate(" + d.R + ",0)")
                    .selectAll("g.moon").data(d.moons).enter().append("g")
                    .attr("class", "moon_cluster").each(function(d, i) {
                      d3.select(this).append("circle").attr("class", "orbit")
                        .attr("r", d.R);
                      d3.select(this).append("circle").attr("r", d.r).attr("cx",d.R)
                        .attr("cy", 0).attr("class", "moon");
                    })
                    .attr("transform", function(d) {
                      return "rotate(" + (d.phi0 + (delta * (d.speed/100))) + ")";
                    });
               })
               .attr("transform", function(d) {
                 return "rotate(" + (d.phi0 + (delta * (d.speed/100))) + ")";
               }).append("text").text("hey").attr("x",50)
                   .attr("y", 50).attr("class", "lol")

      // throttled rotaiton animations
      setInterval(function(){

        var delta = (Date.now() - t0);
        svg.selectAll(".planet_cluster, .moon_cluster .lol").attr("transform", function(d) {
          return "rotate(" + (d.phi0 + (delta * (d.speed/100))) + ")";
        });
      }, 40);
​
    </script>
  </body>
 -->
