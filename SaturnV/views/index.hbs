
<head>
  <meta charset="utf-8">

    <style>

    * {
      background-color: black
    }
      body {
        font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
        width: 100vw;
        height: 100vh;
        position: fixed;
        margin:0;
        padding:0;
        border:0;
      }

      #sun {
        stroke: white;
        fill: lightblue;
      }

      .orbit {
        stroke: white;
        fill: transparent;
      }

      .planet {
        stroke: #666;
        fill: #fff;

      }
      .text_class {
        fill:white
      }

    </style>
  </head>
  <body>
  <div style="width:100%; text-align: right; margin-top: 15px">
      <a href="/logout" style='text-decoration:none; color:white; margin-bottom: 15px; margin-right: 15px'>Log Out</a>
    </div>
    <div style="width:100%; text-align: right; margin-top: 15px">
        <a href="/contact" style='text-decoration:none; color:white; margin-bottom: 15px; margin-right: 15px'>Add Contact</a>
      </div>
    <script src="http://d3js.org/d3.v3.min.js"></script>
    <script>

      // establish variables
      var w     = 1440;
      var h     = 900;
      var x     = (w/2) - 250;
      var y     = (h/2) - 150;
      var t0    = new Date().setHours(0,0,0,0);
      var delta = (Date.now() - t0);

      // planets and moons
      var planets = {{{planets}}}

      // insert svg element
      var svg = d3.select('body').insert("svg")
          .attr("width", w)
          .attr("height", h);

      // sun
      svg.append("circle")
         .attr("r", 20)
         .attr("cx", x)
         .attr("cy", y)
         .attr("id", "sun");

      // planet group
      var container = svg.append("g")
          .attr("id", "orbit_container")
          .attr("transform", "translate(" + x + "," + y + ")");
      // draw planets and moon clusters
      var allPlanets = container.selectAll("g.planet").data(planets).enter().append("g")
               .attr("class", "planet_cluster").each(function(d, i) {
                 console.log(this);
                 d3.select(this).append("circle").attr("class", "orbit")
                   .attr("r", d.R);
                 d3.select(this).append("text").text(planets[i].name).attr("x",planets[i].R+20)
                     .attr("y",0).attr("class", "text_class");
                 d3.select(this).append("circle").attr("r", d.r).attr("cx",d.R)
                   .attr("cy", 0).attr("class", "planet");
                 d3.select(this).append("g").attr("transform", "translate(" + d.R + ",0)")
                    .selectAll("g.moon").data(d.moons).enter().append("g")
                    .attr("class", "moon_cluster").each(function(d, i) {
                      d3.select(this).append("circle").attr("class", "orbit")
                        .attr("r", d.R);
                      d3.select(this).append("circle").attr("r", d.r).attr("cx",d.R)
                        .attr("cy", 0).attr("class", "moon");
                    })
                    .attr("transform", function(d) {
                      return "rotate(" + (d.phi0 + (delta * (d.speed/100))) + ")";
                    });
               })
               .attr("transform", function(d) {
                 return "rotate(" + (d.phi0 + (delta * (d.speed/100))) + ")";
               })
        // allPlanets.append("text").attr("cx", )
      // throttled rotaiton animations
      setInterval(function(){
        delta = (Date.now() - t0);
        svg.selectAll(".planet_cluster, .moon_cluster").attr("transform", function(d) {
          return "rotate(" + (d.phi0 + (delta * (d.speed/100))) + ")";
        });
      }, 40);

    </script>
  </body>


